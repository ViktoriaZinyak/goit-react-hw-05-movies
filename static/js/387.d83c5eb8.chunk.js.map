{"version":3,"file":"static/js/387.d83c5eb8.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,GAAAA,GAAH,mJAUJC,EAAOD,EAAAA,GAAAA,GAAH,2DAKJE,EAAMF,EAAAA,GAAAA,IAAH,8EAMHG,EAAUH,EAAAA,GAAAA,EAAH,sC,SCuBpB,EAzCa,WACX,OAAmCI,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAeH,GAF3C,OAEUI,EAFV,OAGIL,EAAaK,GAHjB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,8BACGF,EAAWU,OAAS,GACnB,SAAChB,EAAD,UACGM,EAAWW,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACzC,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IAAKH,EAAY,UAAMI,EAAAA,IAAN,OAAgBJ,GAAiBK,EAAAA,GAClDC,IAAKL,EACLM,MAAM,SAER,SAACtB,EAAD,UAAUgB,KACV,UAAChB,EAAD,yBAAqBiB,OAPZH,EAUd,OAGH,wEAIP,C,8OC1CKS,EAAM,mCACCJ,EAAU,sCACVC,EACX,6GAEII,EAAMC,EAAAA,GAAAA,OAAa,CACvBC,QAAS,gCAIEC,EAAY,mCAAG,+GAEDH,EAAII,IAAJ,uCAAwCL,IAFvC,cAElBM,EAFkB,gBAGHA,EAASC,KAHN,cAGlBC,EAHkB,yBAIjBA,GAJiB,wCAMxBtB,QAAQuB,MAAR,MANwB,+DAAH,qDAWZC,EAAY,mCAAG,WAAMjB,GAAN,kGAEDQ,EAAII,IAAJ,iCACKL,EADL,kBACkBP,EADlB,yBAFC,cAElBa,EAFkB,gBAKHA,EAASC,KALN,cAKlBC,EALkB,yBAMjBA,EAAOG,SANU,wCAQxBzB,QAAQuB,MAAR,MARwB,+DAAH,sDAaZG,EAAe,mCAAG,WAAMrB,GAAN,kGAEJU,EAAII,IAAJ,kBAAmBd,EAAnB,oBAAiCS,IAF7B,cAErBM,EAFqB,gBAGNA,EAASC,KAHH,cAGrBC,EAHqB,yBAIpBA,GAJoB,wCAM3BtB,QAAQuB,MAAR,MAN2B,+DAAH,sDAWfzB,EAAc,mCAAG,WAAMO,GAAN,kGAEHU,EAAII,IAAJ,kBAAmBd,EAAnB,4BAAyCS,IAFtC,cAEpBM,EAFoB,gBAGLA,EAASC,KAHJ,cAGpBC,EAHoB,yBAInBA,EAAOK,MAJY,wCAM1B3B,QAAQuB,MAAR,MAN0B,+DAAH,sDAWdK,EAAe,mCAAG,WAAMvB,GAAN,kGAEJU,EAAII,IAAJ,kBAAmBd,EAAnB,4BAAyCS,IAFrC,cAErBM,EAFqB,gBAGNA,EAASC,KAHH,cAGrBC,EAHqB,yBAIpBA,EAAOG,SAJa,wCAM3BzB,QAAQuB,MAAR,MAN2B,+DAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  margin-top: 20px;\n  padding: 0;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  width: 180px;\n  height: 340px;\n`;\n\nexport const Img = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 80%;\n`;\n\nexport const Discrip = styled.p`\n  margin: 0;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { IMG_ORG, IMG_CONTENT, getMovieActors } from 'moviesAPI';\nimport { List, Item, Img, Discrip } from './Cast.styled';\n\nconst Cast = () => {\n  const [actorsInfo, setActorInfo] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getActorInfo() {\n      try {\n        const actorInfo = await getMovieActors(movieId);\n        setActorInfo(actorInfo);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getActorInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      {actorsInfo.length > 0 ? (\n        <List>\n          {actorsInfo.map(({ id, profile_path, name, character }) => {\n            return (\n              <Item key={id}>\n                <Img\n                  src={profile_path ? `${IMG_ORG}${profile_path}` : IMG_CONTENT}\n                  alt={name}\n                  width=\"200\"\n                />\n                <Discrip>{name}</Discrip>\n                <Discrip>Character: {character}</Discrip>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <p>We dont`t have any information about actors</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '0166c28893f9efa335e2a16915462c94';\nexport const IMG_ORG = 'https://image.tmdb.org/t/p/original';\nexport const IMG_CONTENT =\n  'https://www.windhorsepublications.com/wp-content/uploads/2019/11/image-coming-soon-placeholder-300x300.png';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/',\n});\n\n// export const getPopMovies = async (page = 1, language = 'en')\nexport const getPopMovies = async () => {\n  try {\n    const response = await api.get(`3/trending/movie/day?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async name => {\n  try {\n    const response = await api.get(\n      `3/search/movie?api_key=${KEY}&query=${name}&include_adult=false`\n    );\n    const newObj = await response.data;\n    return newObj.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await api.get(`3/movie/${id}?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieActors = async id => {\n  try {\n    const response = await api.get(`3/movie/${id}/credits?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj.cast;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await api.get(`3/movie/${id}/reviews?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n"],"names":["List","styled","Item","Img","Discrip","useState","actorsInfo","setActorInfo","movieId","useParams","useEffect","getMovieActors","actorInfo","console","log","getActorInfo","length","map","id","profile_path","name","character","src","IMG_ORG","IMG_CONTENT","alt","width","KEY","api","axios","baseURL","getPopMovies","get","response","data","newObj","error","searchMovies","results","getMovieDetails","cast","getMovieReviews"],"sourceRoot":""}