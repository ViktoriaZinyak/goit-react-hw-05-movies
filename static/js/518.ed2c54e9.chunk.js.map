{"version":3,"file":"static/js/518.ed2c54e9.chunk.js","mappings":"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","sources":["moviesAPI.js","pages/MovieDetails/MovieDetails.Styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0166c28893f9efa335e2a16915462c94';\nexport const IMG_ORG = 'https://image.tmdb.org/t/p/original';\nexport const IMG_CONTENT =\n  'https://www.windhorsepublications.com/wp-content/uploads/2019/11/image-coming-soon-placeholder-300x300.png';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/',\n});\n\n// export const getPopMovies = async (page = 1, language = 'en')\nexport const getPopMovies = async () => {\n  try {\n    const response = await api.get(`3/trending/movie/day?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async name => {\n  try {\n    const response = await api.get(\n      `3/search/movie?api_key=${KEY}&query=${name}&include_adult=false`\n    );\n    const newObj = await response.data;\n    return newObj.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async id => {\n  try {\n    const response = await api.get(`3/movie/${id}?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieActors = async id => {\n  try {\n    const response = await api.get(`3/movie/${id}/credits?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj.cast;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await api.get(`3/movie/${id}/reviews?api_key=${KEY}`);\n    const newObj = await response.data;\n    return newObj.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 40px;\n  /* padding: 40px; */\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  font-weight: 600;\n  margin-bottom: 20px;\n  font-size: 20px;\n  color: #000;\n  text-decoration: none;\n`;\n\nexport const Section = styled.section`\n  padding: 40px;\n`;\n\nexport const AddInfo = styled.p`\n  font-weight: 600;\n  margin-bottom: 20px;\n  font-size: 20px;\n`;\n\nexport const AddLink = styled(NavLink)`\n  font-size: 20px;\n  color: #000;\n  text-decoration: none;\n\n  &.active {\n    color: orange;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: red;\n  }\n`;\n\nexport const LinkWrap = styled.div`\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { IMG_ORG, IMG_CONTENT, getMovieDetails } from 'moviesAPI';\nimport {\n  Box,\n  Link,\n  Section,\n  AddInfo,\n  LinkWrap,\n  AddLink,\n} from './MovieDetails.Styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [goBackLink, setGoBackLink] = useState('');\n\n  useEffect(() => {\n    setGoBackLink(location.state?.from ?? '/movies');\n    async function getMovieInfo() {\n      try {\n        const movieInfo = await getMovieDetails(movieId);\n        setMovieInfo(movieInfo);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovieInfo();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  const {\n    title,\n    poster_path,\n    original_title,\n    popularity,\n    release_date,\n    overview,\n    genres,\n  } = movieInfo;\n\n  const img = `${IMG_ORG}${poster_path}`;\n  return (\n    <>\n      {movieInfo && (\n        <Section>\n          <Link to={goBackLink}>\n            <BsArrowLeft />\n            Go Back\n          </Link>\n          <Box>\n            <img\n              src={poster_path ? img : IMG_CONTENT}\n              alt={title}\n              width=\"300\"\n            />\n            <div>\n              <h1>\n                {original_title} ({release_date})\n              </h1>\n              <p>User score: {Math.round(popularity)}</p>\n              <h2>Overview</h2>\n              <p>Overview: {overview}</p>\n              <h3>Genres</h3>\n              {<p>{genres && genres.map(genre => `${genre.name + ' '}`)} </p>}\n            </div>\n          </Box>\n          <div>\n            <AddInfo>Additional information</AddInfo>\n            <LinkWrap>\n              <AddLink to=\"cast\">Cast</AddLink>\n              <AddLink to=\"review\">Review</AddLink>\n            </LinkWrap>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","IMG_ORG","IMG_CONTENT","api","axios","baseURL","getPopMovies","get","response","data","newObj","console","error","searchMovies","name","results","getMovieDetails","id","getMovieActors","cast","getMovieReviews","Box","styled","Link","NavLink","Section","AddInfo","AddLink","LinkWrap","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","goBackLink","setGoBackLink","useEffect","log","state","from","getMovieInfo","title","poster_path","original_title","popularity","release_date","overview","genres","img","to","src","alt","width","Math","round","map","genre","Suspense","fallback"],"sourceRoot":""}